<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.web.dao.ChargeitemMapper">
  <resultMap id="BaseResultMap" type="com.web.entity.Chargeitem">
    <id column="chargeId" jdbcType="INTEGER" property="chargeid" />
    <result column="patientId" jdbcType="INTEGER" property="patientid" />
    <result column="chargeTime" jdbcType="VARCHAR" property="chargetime" />
    <result column="userId" jdbcType="INTEGER" property="userid" />
    <result column="departmentId" jdbcType="INTEGER" property="departmentid" />
    <result column="isDelete" jdbcType="INTEGER" property="isdelete" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    chargeId, patientId, chargeTime, userId, departmentId ,isDelete
  </sql>
  <select id="selectByExample" parameterType="com.web.entity.ChargeitemExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from chargeitem
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from chargeitem
    where chargeId = #{chargeid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from chargeitem
    where chargeId = #{chargeid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.web.entity.ChargeitemExample">
    delete from chargeitem
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.web.entity.Chargeitem">
    insert into chargeitem (chargeId, patientId, chargeTime, 
      userId, departmentId, isDelete)
    values (#{chargeid,jdbcType=INTEGER}, #{patientid,jdbcType=INTEGER}, #{chargetime,jdbcType=VARCHAR}, 
      #{userid,jdbcType=INTEGER}, #{departmentid,jdbcType=INTEGER}, 0)
  </insert>
  <insert id="insertSelective" parameterType="com.web.entity.Chargeitem">
    insert into chargeitem
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="chargeid != null">
        chargeId,
      </if>
      <if test="patientid != null">
        patientId,
      </if>
      <if test="chargetime != null">
        chargeTime,
      </if>
      <if test="userid != null">
        userId,
      </if>
      <if test="departmentid != null">
        departmentId,
      </if>
      <if test="isdelete != null">
        isDelete,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="chargeid != null">
        #{chargeid,jdbcType=INTEGER},
      </if>
      <if test="patientid != null">
        #{patientid,jdbcType=INTEGER},
      </if>
      <if test="chargetime != null">
        #{chargetime,jdbcType=VARCHAR},
      </if>
      <if test="userid != null">
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="departmentid != null">
        #{departmentid,jdbcType=INTEGER},
      </if>
       <if test="isdelete != null">
        #{isdelete,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.web.entity.ChargeitemExample" resultType="java.lang.Long">
    select count(*) from chargeitem
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update chargeitem
    <set>
      <if test="record.chargeid != null">
        chargeId = #{record.chargeid,jdbcType=INTEGER},
      </if>
      <if test="record.patientid != null">
        patientId = #{record.patientid,jdbcType=INTEGER},
      </if>
      <if test="record.chargetime != null">
        chargeTime = #{record.chargetime,jdbcType=VARCHAR},
      </if>
      <if test="record.userid != null">
        userId = #{record.userid,jdbcType=INTEGER},
      </if>
      <if test="record.departmentid != null">
        departmentId = #{record.departmentid,jdbcType=INTEGER},
      </if>
      <if test="record.isdelete != null">
        isDelete = #{record.isdelete,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update chargeitem
    set chargeId = #{record.chargeid,jdbcType=INTEGER},
      patientId = #{record.patientid,jdbcType=INTEGER},
      chargeTime = #{record.chargetime,jdbcType=VARCHAR},
      userId = #{record.userid,jdbcType=INTEGER},
      departmentId = #{record.departmentid,jdbcType=INTEGER},
      isDelete = #{record.isdelete,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.web.entity.Chargeitem">
    update chargeitem
    <set>
      <if test="patientid != null">
        patientId = #{patientid,jdbcType=INTEGER},
      </if>
      <if test="chargetime != null">
        chargeTime = #{chargetime,jdbcType=VARCHAR},
      </if>
      <if test="userid != null">
        userId = #{userid,jdbcType=INTEGER},
      </if>
      <if test="departmentid != null">
        departmentId = #{departmentid,jdbcType=INTEGER},
      </if>
      <if test="isdelete != null">
        isDelete = #{isdelete,jdbcType=INTEGER},
      </if>
    </set>
    where chargeId = #{chargeid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.web.entity.Chargeitem">
    update chargeitem
    set patientId = #{patientid,jdbcType=INTEGER},
      chargeTime = #{chargetime,jdbcType=VARCHAR},
      userId = #{userid,jdbcType=INTEGER},
      departmentId = #{departmentid,jdbcType=INTEGER},
      Isdelete = #{isdelete,jdbcType=INTEGER}
    where chargeId = #{chargeid,jdbcType=INTEGER}
  </update>
  
  <resultMap id="chargeitemResultMap" type="com.web.entity.Chargeitem">
		<id column="chargeId" jdbcType="INTEGER" property="chargeid" />
		<result column="patientId" jdbcType="INTEGER" property="patientid" />
		<result column="chargeTime" jdbcType="VARCHAR" property="chargetime" />
		<result column="userId" jdbcType="INTEGER" property="userid" />
		<result column="departmentId" jdbcType="INTEGER" property="departmentid" />
		<result column="isDelete" jdbcType="INTEGER" property="isdelete" />

		<association property="patient" javaType="com.web.entity.Patient">
			<id column="patientId" jdbcType="INTEGER" property="patientid" />
			<result column="name" jdbcType="VARCHAR" property="name" />
		</association>
		
		<association property="user" javaType="com.web.entity.User">
	        <id column="userId" jdbcType="INTEGER" property="userid" />
	        <result column="userName" jdbcType="VARCHAR" property="username" />
	    </association>
	    
	    <association property="department" javaType="com.web.entity.Department">
			<id column="departmentId" jdbcType="INTEGER" property="departmentid" />
			<result column="departmentName" jdbcType="VARCHAR" property="departmentname" />
		</association>

	</resultMap>

	<select id="queryAll" resultMap="chargeitemResultMap">
		select *
		FROM
		chargeitem c, patient p,user u,department d
		WHERE c.patientId = p.patientId
		and c.userId = u.userId
		and c.departmentId = d.departmentId
	</select>
</mapper>